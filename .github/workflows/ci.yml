name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:6
        ports: ['27017:27017']
        options: >-
          --health-cmd "mongo --eval 'db.adminCommand(\"ping\")'" 
          --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      MONGO_URI: mongodb://localhost:27017/dev_db
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install backend dependencies
        working-directory: server
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run backend lint (optional)
        working-directory: server
        run: npm run lint --if-present

      - name: Run backend tests (optional)
        working-directory: server
        run: npm test --if-present

  frontend:
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies
        working-directory: client
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run frontend lint (optional)
        working-directory: client
        run: npm run lint --if-present

      - name: Build frontend
        working-directory: client
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-dist
          path: client/dist